% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SpatialDecon.R
\name{SpatialDecon}
\alias{SpatialDecon}
\title{Title Deconvolution of ST spots expression use dampened weighted least squares (DWLS)}
\usage{
SpatialDecon(
  enrich_matrix = enrich_matrix,
  enrich_result = enrich_result,
  filter_expr = filter_expr,
  filter_sig = filter_sig,
  clustermarkers_list = clustermarkers_list,
  meta_data = meta_data,
  malignant_cluster = malignant_clsuter,
  tissue_cluster = tissue_clsuter,
  stromal_cluster = stromal_cluster
)
}
\arguments{
\item{enrich_matrix}{A binary matrix features as row, cell types as column}

\item{enrich_result}{A matrix of enrich result, cell types as row, spatial spots as column}

\item{filter_expr}{A matrix of filtered ST data expression}

\item{filter_sig}{The sig_exp filtered by features, sig_exp: mean expression of each feature across cell types generated by scRNAseq data}

\item{clustermarkers_list}{A list of markers of each cell type of scRNAseq dataset}

\item{meta_data}{A data frame contain nCount_Spatial,decon_topics,and signature scores of each spot}

\item{malignant_cluster}{The name of malignant cluster in scRNAseq dataset, for example "Tumor", "Tumor cells", "Malignant epithelial", "Malignant epithelial cells", etc.}

\item{tissue_cluster}{The name of adjacent normal tissue cluster in scRNAseq dataset, for example "Epithelial", "Epithelial cells", "Hepatocytes", "Cholangiocytes", etc.}

\item{stromal_cluster}{The name of stromal cluster poorly permeated, for example "Fibroblast", "Fibroblast cells", etc.}
}
\value{
A data frame of deconvolution result of each spatial spot
}
\description{
deconvolution of ST spots to explore the infiltration proportion of scRNAseq cell types in each spot
}
\examples{
# read boundary definde data
TumorST <- readr::read_rds("YourPath/TumorBoundary/Fig/1.BoundaryDefine/CRC1/TumorSTBoundaryDefine.rds.gz")
sig_exp <- readr::read_rds("YourPath/TumorBoundary/sig_exp.rds.gz")
clustermarkers_list <- readr::read_rds("YourPath/clustermarkers_list.rds.gz")
# get st and sc filtered expr data
TumorST <- NormalizeData(TumorST,assay = "Spatial")
TumorST@meta.data$Decon_topics <- paste(TumorST@meta.data$Location,TumorST@meta.data$seurat_clusters,sep = "_")
expr_values = as.matrix(TumorST@assays$Spatial@data) #ST expr log
nolog_expr = 2^(expr_values)-1 #ST expr nolog
meta_data <- TumorST@meta.data[,c("nCount_Spatial","Decon_topics","Location")]
# Signature score
for(cluster in names(clustermarkers_list)){
  cluster_markers = clustermarkers_list[[cluster]][1:25]
  cluster_score <- apply(TumorST@assays$Spatial@data[rownames(TumorST@assays$Spatial@data) \%in\% cluster_markers,],2,mean)
  meta_data <- cbind(meta_data,cluster_score)
}
colnames(meta_data) <- c("nCount_Spatial","Decon_topics","Location",names(clustermarkers_list))
# filter st and sc feature
intersect_gene = intersect(rownames(sig_exp), rownames(nolog_expr))
filter_sig = sig_exp[intersect_gene,]
filter_expr = nolog_expr[intersect_gene,]
filter_log_expr = expr_values[intersect_gene,]
# get enrich matrix
enrich_matrix <- get_enrich_matrix(filter_sig = filter_sig,clustermarkers_list = clustermarkers_list)
# get enrich result
enrich_result <- enrich_analysis(filter_log_expr = filter_log_expr,enrich_matrix = enrich_matrix)
DeconData <- SpatialDecon(enrich_matrix = enrich_matrix,
                          enrich_result = enrich_result,
                          filter_expr = filter_expr,
                          filter_sig = filter_sig,
                          clustermarkers_list = clustermarkers_list,
                          meta_data = meta_data,
                          malignant_cluster = malignant_clsuter,
                          tissue_cluster = tissue_clsuter,
                          stromal_cluster = stromal_cluster
                          )

}
